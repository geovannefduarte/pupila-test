import requests


def main():

    # Lista de perguntas com um prompt para valida√ß√£o da mensagem. Como √© uma campo aberto, o usu√°rio pode digitar
    # qualquer coisa e n√£o estar condizente com a pergunta. Pra tentar minimizar poss√≠veis erros, estamos usando a
    # pr√≥pria API do claude pra validar o retorno do usu√°rio.
    # Foi usada uma temperature mediana para casos de erro de digita√ß√£o e falta de acentos
    # E o modelo usado foi o haiku que √© o com resposta mais r√°pida
    questions = {
        "1Ô∏è‚É£  Qual √© o seu animal favorito?": ClaudeRequestValidation(
            model="claude-3-5-haiku-latest",
            temperature=0.5,
            content="Eu quero que voc√™ aja como um analista de testes, sendo t√©cnico e sucinto. Eu vou prover a "
                    "resposta de um usu√°rio e quero voc√™ valide se a resposta √© v√°lida para a pergunta. O tipo de "
                    "valida√ß√£o que quero que fa√ßa √© sobre o contexto verificando se o animal favotito informado pelo "
                    "usu√°rio √© realmente um animal. Valida√ß√£o de maiusculas e minusculas n√£o devem ser levadas em "
                    "considera√ß√£o. Seu papel √© retornar a palavra 'true' se a resposta do usu√°rio for v√°lida. Ou "
                    "retornar a palavra 'false', se a resposta do usu√°rio for inv√°lida. Em caso de d√∫vida, "
                    "retornar 'false'. Seja rigoroso para retornar apenas essas duas palavras sem nenhum texto "
                    "adicional.",
            max_tokens=8
        ),
        "2Ô∏è‚É£  Qual √© o continente, pa√≠s ou cidade dos sonhos para visitar?": ClaudeRequestValidation(
            model="claude-3-5-haiku-latest",
            temperature=0.5,
            content="Eu quero que voc√™ aja como um analista de testes, sendo t√©cnico e sucinto. Eu vou prover a "
                    "resposta de um usu√°rio e quero voc√™ valide se a resposta √© v√°lida para a pergunta. O tipo de "
                    "valida√ß√£o que quero que fa√ßa √© sobre o contexto verificando se o lugar informado pelo usu√°rio √© "
                    "realmente um continente, pa√≠s ou cidade. Valida√ß√£o de maiusculas e minusculas n√£o devem ser "
                    "levadas em considera√ß√£o. Seu papel √© retornar a palavra 'true' se a resposta do usu√°rio for "
                    "v√°lida. Ou retornar a palavra 'false', se a resposta do usu√°rio for inv√°lida. Em caso de d√∫vida, "
                    "retornar 'false'. Seja rigoroso para retornar apenas essas duas palavras sem nenhum texto "
                    "adicional.",
            max_tokens=8
        ),
        "3Ô∏è‚É£  Qual √© a sua comida favorita?": ClaudeRequestValidation(
            model="claude-3-5-haiku-latest",
            temperature=0.5,
            content="Eu quero que voc√™ aja como um analista de testes, sendo t√©cnico e sucinto. Eu vou prover a "
                    "resposta de um usu√°rio e quero voc√™ valide se a resposta √© v√°lida para a pergunta. O tipo de "
                    "valida√ß√£o que quero que fa√ßa √© sobre o contexto verificando se a comida informada pelo usu√°rio √© "
                    "realmente uma comida. Valida√ß√£o de maiusculas e minusculas n√£o devem ser levadas em "
                    "considera√ß√£o. Seu papel √© retornar a palavra 'true' se a resposta do usu√°rio for v√°lida. Ou "
                    "retornar a palavra 'false', se a resposta do usu√°rio for inv√°lida. Em caso de d√∫vida, "
                    "retornar 'false'. Seja rigoroso para retornar apenas essas duas palavras sem nenhum texto "
                    "adicional.",
            max_tokens=8
        ),
        "4Ô∏è‚É£  Qual √© a sua cor favorita?": ClaudeRequestValidation(
            model="claude-3-5-haiku-latest",
            temperature=0.5,
            content="Eu quero que voc√™ aja como um analista de testes, sendo t√©cnico e sucinto. Eu vou prover a "
                    "resposta de um usu√°rio e quero voc√™ valide se a resposta √© v√°lida para a pergunta. O tipo de "
                    "valida√ß√£o que quero que fa√ßa √© sobre o contexto verificando se a cor informada pelo usu√°rio √© "
                    "realmente uma cor. Valida√ß√£o de maiusculas e minusculas n√£o devem ser levadas em considera√ß√£o. "
                    "Seu papel √© retornar a palavra 'true' se a resposta do usu√°rio for v√°lida. Ou retornar a palavra "
                    "'false', se a resposta do usu√°rio for inv√°lida. Em caso de d√∫vida, retornar 'false'. Seja "
                    "rigoroso para retornar apenas essas duas palavras sem nenhum texto adicional.",
            max_tokens=8
        ),
        "5Ô∏è‚É£  Qual √© o seu superpoder imagin√°rio favorito?": ClaudeRequestValidation(
            model="claude-3-5-haiku-latest",
            temperature=0.5,
            content="Eu quero que voc√™ aja como um analista de testes, sendo t√©cnico e sucinto. Eu vou prover a "
                    "resposta de um usu√°rio e quero voc√™ valide se a resposta √© v√°lida para a pergunta. O tipo de "
                    "valida√ß√£o que quero que fa√ßa √© sobre o contexto verificando se o superpoder informado pelo "
                    "usu√°rio √© realmente um superpoder. Valida√ß√£o de maiusculas e minusculas n√£o devem ser levadas em "
                    "considera√ß√£o. Seu papel √© retornar a palavra 'true' se a resposta do usu√°rio for v√°lida. Ou "
                    "retornar a palavra 'false', se a resposta do usu√°rio for inv√°lida. Em caso de d√∫vida, "
                    "retornar 'false'. Seja rigoroso para retornar apenas essas duas palavras sem nenhum texto "
                    "adicional.",
            max_tokens=8
        ),
    }

    responses = {}
    print("\n‚ú®‚ú®‚ú® Prepare-se para uma experi√™ncia √∫nica! ‚ú®‚ú®‚ú®\n")
    print("Sou um contador de hist√≥rias extremamente criativo üìñ‚ú®")
    print("Com apenas 5 perguntas, vou transformar suas respostas em uma hist√≥ria incr√≠vel e personalizada üé≠üìö")
    print("Mal posso esperar para ver onde sua imagina√ß√£o vai nos levar! üöÄüåü")

    # Aqui, fiz um retry para casos em que o usu√°rio informasse algo "inv√°lido". Pra n√£o ficar em um loop,
    # s√≥ estou fazendo o prompt uma fez para o usu√°rio em casos de resposta incompat√≠vel com a pergunta
    for question, validation in questions.items():
        retries = 1
        while retries >= 0:
            retries -= 1
            user_input = input(f"\n{question} ").strip()
            question_sanitized = question.split("Ô∏è‚É£")[1].strip() if "Ô∏è‚É£" in question else question

            if is_valid(question, user_input, validation):
                responses[question_sanitized] = user_input
                retries = -1
            elif retries < 0:
                responses[question_sanitized] = user_input
            else:
                print("Ops! Parece que a resposta n√£o est√° no formato que eu esperava. ü§î")
                print(
                    "Voc√™ pode tentar novamente? Vou precisar de uma resposta mais clara para criar a hist√≥ria "
                    "perfeita para voc√™. üòä")

    print("\n\n√ìtimo! üéâ")
    print("Com suas respostas em m√£os, estou criando uma hist√≥ria incr√≠vel, feita sob medida para voc√™! üñãÔ∏è‚ú®")
    print("Prepare-se para embarcar em uma aventura √∫nica que vai surpreender e encantar. üöÄüåü\n")
    print("S√≥ mais um momento‚Ä¶ a m√°gica est√° acontecendo! üíéüìñ\n")

    generate_story(responses)


def is_valid(question, user_response, request_validation):
    if not user_response:
        return False
    content = f"{request_validation.content}. Pergunta feita: '{question}'. Resposta do usu√°rio: '{user_response}'"
    claude_response = call_claude_api(request_validation.model, request_validation.temperature, content,
                                      request_validation.max_tokens)
    return claude_response and claude_response.content[0]['text'].lower() == "true"


def generate_story(responses):
    model = "claude-3-5-sonnet-latest"
    max_tokens = 2048
    temperature = 1.0
    content = ("Voc√™ √© um contador de hist√≥rias extremamente criativo. "
               "Com apenas 5 perguntas, voc√™ deve transformar as respostas em uma hist√≥ria incr√≠vel e personalizada. "
               "Adicione emojis para tornar a hist√≥ria ainda mais envolvente. "
               "Baseando-se nas seguintes respostas, crie uma hist√≥ria √∫nica e interessante: " +
               " ".join([f"{key} {value}." for key, value in responses.items()]))

    claude_response = call_claude_api(model, temperature, content, max_tokens)
    story = " ".join(message['text'] for message in claude_response.content) if claude_response else \
        ("Ops! Parece que algo deu errado enquanto eu criava sua hist√≥ria. üòî Mas n√£o se preocupe, vamos tentar "
         "novamente! üöÄ‚ú®")
    print(story)


def call_claude_api(model, temperature, content, max_tokens):
    url = "https://api.anthropic.com/v1/messages"
    headers = {
        "x-api-key": "YOUR_API_KEY",
        "anthropic-version": "2023-06-01",
        "content-type": "application/json"
    }
    payload = {
        "model": model,
        "temperature": temperature,
        "messages": [{"role": "user", "content": content}],
        "max_tokens": max_tokens
    }

    try:
        response = requests.post(url, headers=headers, json=payload, timeout=60)
        response.raise_for_status()
        return ClaudeMessagesResponse.from_response(response.json())
    except Exception as e:
        print(f"Error calling the API: {e}")
        return None


class ClaudeMessagesResponse:
    def __init__(self, id, type, role, model, content, usage):
        self.id = id
        self.type = type
        self.role = role
        self.model = model
        self.content = content
        self.usage = usage

    @staticmethod
    def from_response(json_response):
        return ClaudeMessagesResponse(
            id=json_response["id"],
            type=json_response["type"],
            role=json_response["role"],
            model=json_response["model"],
            content=json_response["content"],
            usage=json_response["usage"]
        )


class ClaudeRequestValidation:
    def __init__(self, model, temperature, content, max_tokens):
        self.model = model
        self.temperature = temperature
        self.content = content
        self.max_tokens = max_tokens


if __name__ == "__main__":
    main()
